<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on K5924&#39;s Blog</title>
    <link>https://k5924.github.io/tags/java/</link>
    <description>Recent content in java on K5924&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 12 Sep 2021 00:59:07 +0100</lastBuildDate><atom:link href="https://k5924.github.io/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Image Processor</title>
      <link>https://k5924.github.io/p/image-processor/</link>
      <pubDate>Sun, 12 Sep 2021 00:59:07 +0100</pubDate>
      
      <guid>https://k5924.github.io/p/image-processor/</guid>
      <description>An application made to perform processing operations on images as part of the CSI_5_OOP_2021 (Object Oriented Programming) module at LSBU (London South Bank University). The majority of the code was provided by the module leader where I have been tasked to:
  Move each operation to an individual class Create a common interface or abstract class that all individual operation classes descend from Automatically add all operations to the operations menu in the application Link the menu operations to code that executes the operation Use a factory class to instantiate each operation Pass a factory class instance to the ImageProcessor constructor to populate the menu items under operations  Extended task  Implement the following operations with their interfaces then add them to the factory so that a user can set them in the application</description>
    </item>
    
    <item>
      <title>Elevation</title>
      <link>https://k5924.github.io/p/elevation/</link>
      <pubDate>Sun, 12 Sep 2021 00:45:23 +0100</pubDate>
      
      <guid>https://k5924.github.io/p/elevation/</guid>
      <description>We are provided with a working application that searches a raster of elevation data for regions of relative flatness. The raster is an image in which each pixel represents an elevation for a point on the terrain. The application can be imagined to be searching for potential landing sites for an aircraft or spacecraft of some kind. rgbelevation contains example images to use with the program
 SearchUIEnhancement    Run the search on a worker thread so the UI doesnt freeze -Display output from the searcher in the text area under the raster A user can cancel the operation and quit the program by closing the window A user can cancel the operation without quitting the program through a cancel button A progress bar is updated each second by a dedicated thread that monitors the progress of the search  Parallelisation    Make a class that extends recursive action which searches the raster for points of elevation Implement a compute method to make new threads in the fork join pool Discard information and update messages from the search listener  Considerations  All code must implement thread-safety correctly</description>
    </item>
    
    <item>
      <title>Choosing a programming language</title>
      <link>https://k5924.github.io/p/choosing-a-programming-language/</link>
      <pubDate>Sun, 05 Sep 2021 03:19:08 +0100</pubDate>
      
      <guid>https://k5924.github.io/p/choosing-a-programming-language/</guid>
      <description>Although I will be talking about high level languages I think this post applies to all types of programming languages.
When programming everyone struggles to choose a specific programming language to code in but choosing a language to code in is easier than it seems. In my experience choosing a language mainly depends on what you want to do for the coding project you&amp;rsquo;ve chosen.
For instance, if you are making a CLI application, there is no need to use a language like python or java as it adds unnecessary overhead to the application.</description>
    </item>
    
  </channel>
</rss>
