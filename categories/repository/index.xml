<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Repository on K5924&#39;s Blog</title>
    <link>https://k5924.github.io/categories/repository/</link>
    <description>Recent content in Repository on K5924&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 12 Sep 2021 01:09:50 +0100</lastBuildDate><atom:link href="https://k5924.github.io/categories/repository/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>VICE Chess Engine</title>
      <link>https://k5924.github.io/p/vice-chess-engine/</link>
      <pubDate>Sun, 12 Sep 2021 01:09:50 +0100</pubDate>
      
      <guid>https://k5924.github.io/p/vice-chess-engine/</guid>
      <description>This is a chess engine built using C. This is the same code that is found in the tutorial however, I have structured the code into separate folders and updated the makefile for ease of use. Can be used alongisde arena
 Installation  Run the make file in a terminal using this command:
 make TODO  Follow this video on his channel which is technically the last VICE/chess engine video add static modifier to functions which are only used in the file in which they are declared add const/final to variables which wont be changed inside certain functions (when doing so do some testing so that the program works correctly)</description>
    </item>
    
    <item>
      <title>TicTacToe</title>
      <link>https://k5924.github.io/p/tictactoe/</link>
      <pubDate>Sun, 12 Sep 2021 01:04:56 +0100</pubDate>
      
      <guid>https://k5924.github.io/p/tictactoe/</guid>
      <description>A Tic Tac Toe Game (if you get 3 in a row you win)
 TODO  Fix the PVE Mode so that the score is incremented once when a player or entity wins, currently the score increments twice
 Credits Mitch Koko for his tutorial for Tic Tac Toe on his Youtube Channel Here
Combined the fork from singhdhroov found Here so that there is a PVE game mode alongside PVP</description>
    </item>
    
    <item>
      <title>Image Processor</title>
      <link>https://k5924.github.io/p/image-processor/</link>
      <pubDate>Sun, 12 Sep 2021 00:59:07 +0100</pubDate>
      
      <guid>https://k5924.github.io/p/image-processor/</guid>
      <description>An application made to perform processing operations on images as part of the CSI_5_OOP_2021 (Object Oriented Programming) module at LSBU (London South Bank University). The majority of the code was provided by the module leader where I have been tasked to:
  Move each operation to an individual class Create a common interface or abstract class that all individual operation classes descend from Automatically add all operations to the operations menu in the application Link the menu operations to code that executes the operation Use a factory class to instantiate each operation Pass a factory class instance to the ImageProcessor constructor to populate the menu items under operations  Extended task  Implement the following operations with their interfaces then add them to the factory so that a user can set them in the application</description>
    </item>
    
    <item>
      <title>Sudoku Solver</title>
      <link>https://k5924.github.io/p/sudoku-solver/</link>
      <pubDate>Sun, 12 Sep 2021 00:55:55 +0100</pubDate>
      
      <guid>https://k5924.github.io/p/sudoku-solver/</guid>
      <description> This is a program which will solve a majority of the sudoku challenges thrown at it
 Installation  Replace the sudoku puzzle in puzzle.c with a puzzle from Web Sudoku (puzzles up to hard have worked, Evil level doesn&amp;rsquo;t seem to work)
  Run the make file in a terminal using this command:
 make Credits  James Wadsworth for his youtube tutorial found here
 </description>
    </item>
    
    <item>
      <title>Elevation</title>
      <link>https://k5924.github.io/p/elevation/</link>
      <pubDate>Sun, 12 Sep 2021 00:45:23 +0100</pubDate>
      
      <guid>https://k5924.github.io/p/elevation/</guid>
      <description>We are provided with a working application that searches a raster of elevation data for regions of relative flatness. The raster is an image in which each pixel represents an elevation for a point on the terrain. The application can be imagined to be searching for potential landing sites for an aircraft or spacecraft of some kind. rgbelevation contains example images to use with the program
 SearchUIEnhancement    Run the search on a worker thread so the UI doesnt freeze -Display output from the searcher in the text area under the raster A user can cancel the operation and quit the program by closing the window A user can cancel the operation without quitting the program through a cancel button A progress bar is updated each second by a dedicated thread that monitors the progress of the search  Parallelisation    Make a class that extends recursive action which searches the raster for points of elevation Implement a compute method to make new threads in the fork join pool Discard information and update messages from the search listener  Considerations  All code must implement thread-safety correctly</description>
    </item>
    
    <item>
      <title>The Vault</title>
      <link>https://k5924.github.io/p/the-vault/</link>
      <pubDate>Sun, 12 Sep 2021 00:40:38 +0100</pubDate>
      
      <guid>https://k5924.github.io/p/the-vault/</guid>
      <description>This is an offline password manager as most online password managers store a users information on centralized servers. This gives an end user the ability to take control of how there data is being used and allows end users&#39; to keep hold of their private data whilst interacting with a password manager with an easy to use interface. This project was made for coursework while i was in my 2nd Year of studying Computer Science at LSBU for the Software Engineering module.</description>
    </item>
    
    <item>
      <title>DiscreteMaths</title>
      <link>https://k5924.github.io/p/discretemaths/</link>
      <pubDate>Sun, 12 Sep 2021 00:35:03 +0100</pubDate>
      
      <guid>https://k5924.github.io/p/discretemaths/</guid>
      <description>CourseWork for Discrete MathematicsThe write up will be uploaded to this branch when the coursework has been markedThe file titled linear programming problem.ipynb is an anaconda notebook that i used to run all of the python scripts i have made.LPP The file titled lpp.py is the program i used to build the linear programming graphs of each individual edge in the tree.Graph Theory The file titled dijkstra&amp;rsquo;s algo.py is the algorithm used in the graph theory sectionStatistics The basic information files and the pdf files with the csv&amp;rsquo;s are used in this section for the boxplots, gaussian distributions and the probability density functions</description>
    </item>
    
  </channel>
</rss>
